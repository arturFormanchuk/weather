{"version":3,"sources":["components/mainWeatherCard/img.png","components/Body/body.js","components/mainWeatherCard/mainWeatherCard.js","components/leftCard/leftCard.js","components/OneDayWeather/OneDayWeather.js","components/mainInfo/MainInfo.js","components/header/Header.js","components/Loader/Loader.js","components/AddLocation/AddLocation.js","components/OtherCity/OtherCity.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Body","props","className","children","MainWeatherCard","weather","name","country","src","img","alt","LeftCard","icon","Math","round","temp","description","OneDayWeather","date","Date","day","dt","toString","split","onClick","onclick","key","index","isActive","min","MainInfo","dateRise","oneDay","sunrise","dateSet","sunset","oneDayTemp","night","eve","max","oneDayFeels","pressure","wind_speed","Header","onSubmit","search","mistake","type","placeholder","Loader","AddLocation","addi","OtherCity","delete","city","main","sys","humidity","wind","speed","API","App","state","cord","weatherWeek","isLoaded","input","locations","otherCity","getWeather","a","fetch","fetchData","json","data","console","log","setState","coord","lat","lon","fetchData2","data2","daily","feels_like","changeDay","e","preventDefault","target","elements","value","fetchSearch","loc","localStorage","setItem","JSON","stringify","resp","otherData","positions","push","filtered","filter","fil","filtList2","parse","getItem","el","fetchInCycle","fetchDataCycle","dataCycle","add","alert","val","this","map","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9218c95b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.257f9cf0.png\";","import React, {Component} from 'react';\r\nimport './body.css'\r\n\r\nexport const Body = (props) => {\r\n\r\n  return (\r\n    <div className='body'>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React, {Component} from 'react';\r\nimport './mainWeatherCard.css';\r\nimport img from './img.png'\r\n\r\nexport const MainWeatherCard = (props) => {\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='opacity'>\r\n        <div className='info'>\r\n          <p className='city'><i className=\"fas color fa-map-marker-alt\"/> {props.weather.name}</p>\r\n          <p className='country'>City in {props.country}</p>\r\n        </div>\r\n\r\n        <img className='worldMap' src={img} alt=\"\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport './leftCard.css'\r\n\r\nexport const LeftCard = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <div className='bodyLeft'>\r\n        <div className='top'>\r\n          <span><img className='img' src={`http://openweathermap.org/img/wn/${props.img.icon}@2x.png`} alt=\"\"/></span>\r\n\r\n        </div>\r\n        <div className='bottom'>\r\n          <p className='grades weight'>{Math.round(props.temp)}<span className='grades'>°С</span></p>\r\n          <p className='weatherTitle'>{props.img.description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport './OneDayWeather.css';\r\n\r\nconst OneDayWeather = (props) => {\r\n  const date = new Date(props.day.dt*1000).toString().split(' ');\r\n  return (\r\n    <div className='positionOne' onClick={props.onclick}>\r\n          <div key={props.day.dt} className={props.index === 7 ? 'block' : 'bodyOne'}>\r\n            <div className=\"leftOne\">\r\n            <span>\r\n              <img className='imgOne' src={`http://openweathermap.org/img/wn/${props.day.weather[0].icon}@2x.png`} alt=\"\"/>\r\n            </span>\r\n            </div>\r\n            <div className=\"centerOne\">\r\n              <div><span>{date[0]}</span></div>\r\n              <div><p>{props.day.weather[0].description}</p></div>\r\n            </div>\r\n            <div className={props.isActive===props.day.dt? 'activeColor rightOne' : 'rightOne'}>\r\n              <p><span>{Math.round(props.day.temp.day)}</span>° / <span>{Math.round(props.day.temp.min)}</span>°</p>\r\n\r\n            </div>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default OneDayWeather;\r\n","import React from 'react';\r\n\r\nimport './MainInfo.css'\r\n\r\n\r\n// clouds: 49\r\n// dew_point: -2.91\r\n// dt: 1587549600\r\n// feels_like: {day: 9.63, night: 2.94, eve: 8.72, morn: 9.63}\r\n// humidity: 30\r\n// pressure: 1023\r\n// rain: 0.45\r\n// sunrise: 1587525400\r\n// sunset: 1587576463\r\n// temp: {day: 14, min: 5.41, max: 14, night: 5.41, eve: 13.36, …}\r\n// uvi: 4.77\r\n// weather: [{…}]\r\n// wind_deg: 28\r\n// wind_speed: 2.78\r\n\r\nconst MainInfo = (props) => {\r\n  const dateRise = new Date(props.oneDay.sunrise*1000).toString().split(' ');\r\n  const dateSet = new Date(props.oneDay.sunset*1000).toString().split(' ');\r\n  return (\r\n    <div>\r\n     <div className='mainInfoBody'>\r\n        <h1>Temperature:</h1>\r\n        <h2>Day: <span>{props.oneDayTemp.day}°</span></h2>\r\n        <h2>Night: <span>{props.oneDayTemp.night}°</span></h2>\r\n        <h2>Evening: <span>{props.oneDayTemp.eve}°</span></h2>\r\n        <h2>Min: <span>{props.oneDayTemp.min}°</span></h2>\r\n        <h2>Max: <span>{props.oneDayTemp.max}°</span></h2>\r\n        <h1>Feels Like:</h1>\r\n        <h2>Day: <span>{props.oneDayFeels.day}°</span></h2>\r\n        <h2>Night: <span>{props.oneDayFeels.night}°</span></h2>\r\n        <h2>Evening: <span>{props.oneDayFeels.eve}°</span></h2>\r\n        <h1>Pressure:</h1>\r\n        <h2>{props.oneDay.pressure} mm.</h2>\r\n        <h1>Wind Speed:</h1>\r\n        <h2>{props.oneDay.wind_speed} m/s</h2>\r\n        <h1>Sunrise:</h1>\r\n        <h2>{dateRise[4]}</h2>\r\n        <h1>Sunset:</h1>\r\n        <h2>{dateSet[4]}</h2>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default MainInfo;\r\n","import React, {Component} from 'react';\r\nimport './Header.css'\r\n\r\nconst Header = (props) => {\r\n\r\n  return (\r\n      <form className='form'  onSubmit={props.search}>\r\n        <input className={props.mistake?'error':''}  type=\"search\" name={'input'} placeholder='Enter your city'/>\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n\r\n  return (\r\n    <div className=\"cssload-container position\">\r\n      <div className=\"cssload-speeding-wheel\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React, {Component} from 'react';\r\nimport './AddLocation.css'\r\n\r\nexport const AddLocation = (props) => {\r\n\r\n  return (\r\n    <div className='positionRightAdd'>\r\n      {props.children}\r\n      <form className='formAdd' onSubmit={props.addi}>\r\n        <input  type=\"search\" name={'city'} placeholder='Enter your city'/>\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport './OtherCity.css'\r\n\r\n// base: \"stations\"\r\n// clouds: {all: 20}\r\n// cod: 200\r\n// coord: {lon: 24.03, lat: 49.84}\r\n// dt: 1587810831\r\n// id: 702550\r\n// main:\r\n//   feels_like: 11.29\r\n// humidity: 39\r\n// pressure: 999\r\n// temp: 17\r\n// temp_max: 17\r\n// temp_min: 17\r\n// __proto__: Object\r\n// name: \"Lviv\"\r\n// sys: {type: 1, id: 8909, country: \"UA\", sunrise: 1587784256, sunset: 1587835940}\r\n// timezone: 10800\r\n// visibility: 10000\r\n// weather: Array(1)\r\n// 0:\r\n// description: \"кілька хмар\"\r\n// icon: \"02d\"\r\n// id: 801\r\n// main: \"Clouds\"\r\n// __proto__: Object\r\n// length: 1\r\n// __proto__: Array(0)\r\n// wind: {speed: 6, deg: 300}\r\n// __proto__: Object\r\n\r\nexport const OtherCity = (props) => {\r\n\r\n  return (\r\n    <div className='Other'>\r\n      <div className='absolute' onClick={props.delete}><i className=\"fas fa-times\"/></div>\r\n      <div className='otherTop'>\r\n        <div className='otherTopLeft'>\r\n          <span>\r\n            <img className='imgOne' src={`http://openweathermap.org/img/wn/${props.city.weather[0].icon}@2x.png`}  alt=\"\"/>\r\n          </span>\r\n        </div>\r\n        <div className='otherTopCenter'>\r\n          <p><span>{Math.round(props.city.main.temp)}</span>°</p>\r\n        </div>\r\n        <div className='otherTopRight'>\r\n          <div className='borderLeft'>\r\n            <span>{props.city.name}</span>\r\n            <p>{props.city.sys.country}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='otherBottom'>\r\n        <div className='bottomLeft'>\r\n          <span>Humidity: {props.city.main.humidity}%</span>\r\n        </div>\r\n        <div className='bottomLeft'>\r\n          <span>Pressure: {props.city.main.pressure}</span>\r\n        </div>\r\n        <div className='bottomLeft'>\r\n          <span>Wind: {props.city.wind.speed}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n","import React, { Component } from 'react';\n\nimport { Body } from \"./components/Body/body\";\nimport './App.css';\nimport {MainWeatherCard} from \"./components/mainWeatherCard/mainWeatherCard\";\nimport {LeftCard} from \"./components/leftCard/leftCard\";\nimport OneDayWeather from \"./components/OneDayWeather/OneDayWeather\";\nimport MainInfo from \"./components/mainInfo/MainInfo\";\nimport Header from \"./components/header/Header\";\nimport Loader from \"./components/Loader/Loader\";\nimport {AddLocation} from \"./components/AddLocation/AddLocation\";\nimport {OtherCity} from \"./components/OtherCity/OtherCity\";\n\nconst API ='e0e763316f96e5d778ab8ecf7c95b8f2';\n\nclass App extends Component {\n\n  state={\n    weather:[],\n    country:null,\n    temp:null,\n    img:[],\n    cord:[],\n    weatherWeek:[],\n    isActive:null,\n    oneDay:[],\n    oneDayTemp:[],\n    oneDayFeels:[],\n    isLoaded:false,\n    input:null,\n    mistake:false,\n    locations:[],\n    otherCity:[]\n  };\n\n  getWeather = async() => {\n    const fetchData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=Lviv&appid=${API}&units=metric&lang=uk`);\n    const data = await fetchData.json();\n    console.log(data);\n    this.setState({\n      weather: data,\n      country: data.sys.country,\n      temp: data.main.temp,\n      img: data.weather[0],\n      cord: data.coord,\n\n    });\n    // this.fetchSeven(this.state.cord.lat, this.state.cord.lon);\n    const fetchData2 = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.cord.lat}&lon=${this.state.cord.lon}&appid=${API}&units=metric&lang=uk`);\n    const data2 = await fetchData2.json();\n    this.setState({\n      weatherWeek: data2.daily,\n      isActive: data2.daily[0].dt,\n      oneDay: data2.daily[0],\n      oneDayTemp: data2.daily[0].temp,\n      oneDayFeels: data2.daily[0].feels_like,\n      isLoaded: !this.state.isLoaded\n\n    });\n  };\n\n\n  changeDay = (day) =>{\n    this.setState({isActive:day.dt, oneDay:day, oneDayTemp:day.temp, oneDayFeels:day.feels_like} )\n  };\n\n  search = async (e)=>{\n    e.preventDefault();\n    const input = e.target.elements.input.value;\n    console.log(input);\n    await this.setState({input: input, mistake:false});\n    this.fetchSearch();\n  };\n\n  addi= async(e)=>{\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const loc = [...this.state.locations];\n    localStorage.setItem('Cities', JSON.stringify(loc));\n    const resp = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API}&units=metric&lang=ua`)\n    const otherData = await resp.json()\n    const positions = [...this.state.otherCity];\n    positions.push(otherData);\n    loc.push(otherData.name);\n    this.setState({otherCity:positions,locations:loc});\n    console.log(this.state.otherCity);\n  };\n\n  delete=(city)=>{\n    const list = this.state.otherCity;\n    const filtered = list.filter((fil)=>{\n      return fil!==city\n    });\n    const list2 = JSON.parse(localStorage.getItem('Cities'));\n    const filtList2 = list2.filter((el)=>(el.name!==city.name));\n    localStorage.setItem('Cities', JSON.stringify(filtList2));\n    this.setState({otherCity:filtered});\n  };\n\n  fetchInCycle=async()=>{\n    if(this.state.locations) {\n      for (const city of this.state.locations) {\n        const fetchDataCycle = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API}&units=metric&lang=ua`);\n        const dataCycle = await fetchDataCycle.json();\n        const add = [...this.state.otherCity];\n        await add.push(dataCycle);\n        this.setState({otherCity: add})\n        console.log(this.state.otherCity);\n\n      }\n    }\n  };\n\n  fetchSearch=async()=>{\n    try{\n      const fetchData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.input}&appid=${API}&units=metric&lang=ua`);\n      const data = await fetchData.json();\n      this.setState({\n        weather: data,\n        country: data.sys.country,\n        temp: data.main.temp,\n        img: data.weather[0],\n        cord: data.coord\n      });\n      const fetchData2 = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.cord.lat}&lon=${this.state.cord.lon}&appid=${API}&units=metric&lang=uk`);\n      const data2 = await fetchData2.json();\n      this.setState({\n        weatherWeek: data2.daily,\n        isActive: data2.daily[0].dt,\n        oneDay: data2.daily[0],\n        oneDayTemp: data2.daily[0].temp,\n        oneDayFeels: data2.daily[0].feels_like\n      });\n\n    }\n    catch (e) {\n      console.log(e);\n      this.setState({mistake:true});\n      alert('Error in city name')\n    }\n\n  };\n\n  componentWillMount() {\n\n    const val = (JSON.parse(localStorage.getItem('Cities')));\n    console.log(val);\n    if (val) {\n      this.setState({locations: val});\n    }\n  }\n\n  componentDidMount(){\n\n    this.getWeather();\n    this.fetchInCycle();\n  }\n\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        {this.state.isLoaded?\n        <Body >\n          {/*{this.state.isLoaded?'':<Loader/>}*/}\n          <Header search={this.search} mistake={this.state.mistake}/>\n          <LeftCard temp={this.state.temp} img={this.state.img}/>\n          <MainWeatherCard weather={this.state.weather} country={this.state.country} />\n          <div className='mainB'>\n            <div className='mainBLeft'>\n              <h1 className='leftText'>7 Days <span>Forecast</span></h1>\n              {\n                this.state.weatherWeek.map((day,index)=>{\n                  return(\n                    <OneDayWeather day={day} index={index} onclick={()=>(this.changeDay(day))} isActive={this.state.isActive}/>\n                  )\n                })\n              }\n            </div>\n            <div className='mainBCenter'>\n              <h1 className='leftText'>Current <span>Forecast</span></h1>\n              {this.state.isLoaded? <MainInfo oneDay={this.state.oneDay} oneDayTemp={this.state.oneDayTemp}\n                                             oneDayFeels={this.state.oneDayFeels}/> : ''}\n            </div>\n            <div className='mainBRight' >\n              <AddLocation addi={this.addi}>\n                {this.state.otherCity.map((city)=>{\n                  return(\n                    <OtherCity city={city} delete={()=>(this.delete(city))}/>\n                  )\n                })}\n              </AddLocation>\n            </div>\n          </div>\n\n\n        </Body>\n          :<Loader/>}\n      </div>\n    )\n      ;\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}