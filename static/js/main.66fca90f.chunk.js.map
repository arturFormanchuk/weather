{"version":3,"sources":["components/mainWeatherCard/img.png","components/DarkModeWrapper/DarkModeWrapper.js","components/Body/body.js","components/mainWeatherCard/mainWeatherCard.js","components/leftCard/leftCard.js","components/OneDayWeather/OneDayWeather.js","components/mainInfo/MainInfo.js","components/header/Header.js","components/Loader/Loader.js","components/AddLocation/AddLocation.js","components/OtherCity/OtherCity.js","components/Button/Button.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DarkMode","createContext","DarkModeWrapper","props","useState","darkTheme","setDark","useEffect","window","localStorage","length","JSON","parse","getItem","Provider","value","darkMode","changeTheme","setItem","children","Body","theme","useContext","className","MainWeatherCard","weather","name","country","src","img","alt","LeftCard","icon","Math","round","temp","description","OneDayWeather","date","Date","day","dt","toString","split","onClick","onclick","key","isActive","min","MainInfo","dateRise","oneDay","sunrise","dateSet","sunset","oneDayTemp","night","eve","max","oneDayFeels","pressure","wind_speed","Header","onSubmit","search","mistake","type","placeholder","Loader","AddLocation","addi","OtherCity","delete","city","main","sys","humidity","wind","speed","Button","API","App","state","defLat","defLon","cord","weatherWeek","isLoaded","input","locations","otherCity","getWeather","a","fetch","fetchData","json","data","setState","coord","lat","lon","fetchData2","data2","daily","feels_like","changeDay","e","preventDefault","target","elements","fetchSearch","loc","resp","otherData","cod","positions","push","stringify","filtered","filter","fil","filtList2","el","console","log","fetchInCycle","fetchDataCycle","dataCycle","add","alert","success","poss","coords","latitude","longitude","errorFunc","err","val","this","navigator","geolocation","getCurrentPosition","context","map","index","Component","contextType","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,iC,qaCE9BC,EAAWC,0BAEVC,EAAkB,SAACC,GAAW,IAAD,EAEfC,oBAAS,GAFM,mBAEpCC,EAFoC,KAEzBC,EAFyB,KAezC,OANCC,qBAAU,WACJC,OAAOC,aAAaC,QACrBJ,EAAQK,KAAKC,MAAMH,aAAaI,QAAQ,iBAE1C,IAGF,kBAACb,EAASc,SAAV,CAAmBC,MAAO,CACxBC,SAAUX,EACVY,YAde,WACjBR,aAAaS,QAAQ,aAAab,GAClCC,GAASD,MAcNF,EAAMgB,WCnBAC,EAAO,SAACjB,GACnB,IAAMkB,EAAQC,qBAAWtB,GACzB,OACE,yBAAKuB,UAAWF,EAAML,SAAS,gBAAgB,QAC5Cb,EAAMgB,W,+BCLAK,EAAkB,SAACrB,GAE9B,OACE,yBAAKoB,UAAU,QACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,uBAAGA,UAAU,QAAO,uBAAGA,UAAU,gCAAjC,IAAkEpB,EAAMsB,QAAQC,MAChF,uBAAGH,UAAU,WAAb,WAAgCpB,EAAMwB,UAGxC,yBAAKJ,UAAU,WAAWK,IAAKC,IAAKC,IAAI,QCXnCC,G,MAAW,SAAC5B,GAEvB,OACE,6BACE,yBAAKoB,UAAU,YACb,yBAAKA,UAAU,OACb,8BAAM,yBAAKA,UAAU,MAAMK,IAAG,2CAAsCzB,EAAM0B,IAAIG,KAAhD,WAA+DF,IAAI,OAGnG,yBAAKP,UAAU,UACb,uBAAGA,UAAU,iBAAiBU,KAAKC,MAAM/B,EAAMgC,MAAM,0BAAMZ,UAAU,UAAhB,eACrD,uBAAGA,UAAU,gBAAgBpB,EAAM0B,IAAIO,kBCelCC,G,MAzBO,SAAClC,GACrB,IAAMkB,EAAQC,qBAAWtB,GACnBsC,EAAO,IAAIC,KAAkB,IAAbpC,EAAMqC,IAAIC,IAASC,WAAWC,MAAM,KAC1D,OACE,yBAAKpB,UAAU,cAAcqB,QAASzC,EAAM0C,SACtC,yBAAKC,IAAK3C,EAAMqC,IAAIC,GAAIlB,UAAS,UAAKF,EAAML,SAAS,cAAc,YACjE,yBAAKO,UAAU,WACf,8BACE,yBAAKA,UAAU,SAASK,IAAG,2CAAsCzB,EAAMqC,IAAIf,QAAQ,GAAGO,KAA3D,WAA0EF,IAAI,OAG3G,yBAAKP,UAAWF,EAAML,SAAS,2BAA2B,aACxD,6BAAK,8BAAOsB,EAAK,KACjB,6BAAK,2BAAInC,EAAMqC,IAAIf,QAAQ,GAAGW,eAEhC,yBAAKb,UAAS,UAAKpB,EAAM4C,WAAW5C,EAAMqC,IAAIC,GAA3B,sBAA8CpB,EAAML,SAAS,eAAe,GAA5E,iCAA0GK,EAAML,SAAS,eAAe,MACzJ,2BAAG,8BAAOiB,KAAKC,MAAM/B,EAAMqC,IAAIL,KAAKK,MAApC,UAAoD,8BAAOP,KAAKC,MAAM/B,EAAMqC,IAAIL,KAAKa,MAArF,aCkCCC,G,MAjCE,SAAC9C,GAChB,IAAM+C,EAAW,IAAIX,KAA0B,IAArBpC,EAAMgD,OAAOC,SAAcV,WAAWC,MAAM,KAChEU,EAAU,IAAId,KAAyB,IAApBpC,EAAMgD,OAAOG,QAAaZ,WAAWC,MAAM,KAC9DtB,EAAQC,qBAAWtB,GACzB,OACE,6BACC,yBAAKuB,UAAWF,EAAML,SAAS,gCAAgC,gBAC5D,4CACA,oCAAS,8BAAOb,EAAMoD,WAAWf,IAAxB,SACT,sCAAW,8BAAOrC,EAAMoD,WAAWC,MAAxB,SACX,wCAAa,8BAAOrD,EAAMoD,WAAWE,IAAxB,SACb,oCAAS,8BAAOtD,EAAMoD,WAAWP,IAAxB,SACT,oCAAS,8BAAO7C,EAAMoD,WAAWG,IAAxB,SACT,2CACA,oCAAS,8BAAOvD,EAAMwD,YAAYnB,IAAzB,SACT,sCAAW,8BAAOrC,EAAMwD,YAAYH,MAAzB,SACX,wCAAa,8BAAOrD,EAAMwD,YAAYF,IAAzB,SACb,yCACA,4BAAKtD,EAAMgD,OAAOS,SAAlB,QACA,2CACA,4BAAKzD,EAAMgD,OAAOU,WAAlB,QACA,wCACA,4BAAKX,EAAS,IACd,uCACA,4BAAKG,EAAQ,QC/BNS,G,MAVA,SAAC3D,GACd,IAAMkB,EAAQC,qBAAWtB,GACzB,OACI,0BAAMuB,UAAWF,EAAML,SAAS,gBAAgB,OAAS+C,SAAU5D,EAAM6D,QACvE,2BAAOzC,UAAWpB,EAAM8D,QAAQ,QAAQ,GAAKC,KAAK,SAASxC,KAAM,QAASyC,YAAY,oBACtF,4BAAQD,KAAK,UAAb,aCGOE,G,MATA,WAEb,OACE,yBAAK7C,UAAU,8BACb,yBAAKA,UAAU,8BCHR8C,G,MAAc,SAAClE,GAC1B,IAAMkB,EAAQC,qBAAWtB,GACzB,OACE,yBAAKuB,UAAW,oBACbpB,EAAMgB,SACP,0BAAMI,UAAWF,EAAML,SAAS,0BAA0B,UAAW+C,SAAU5D,EAAMmE,MACnF,2BAAQJ,KAAK,SAASxC,KAAM,OAAQyC,YAAY,oBAChD,4BAAQD,KAAK,UAAb,WCsBKK,G,MAAY,SAACpE,GACxB,IAAMkB,EAAQC,qBAAWtB,GACzB,OACE,yBAAKuB,UAAWF,EAAML,SAAS,kBAAkB,SAC/C,yBAAKO,UAAU,WAAWqB,QAASzC,EAAMqE,QAAQ,uBAAGjD,UAAU,kBAC9D,yBAAKA,UAAU,YACb,yBAAKA,UAAU,gBACb,8BACE,yBAAKA,UAAU,SAASK,IAAG,2CAAsCzB,EAAMsE,KAAKhD,QAAQ,GAAGO,KAA5D,WAA4EF,IAAI,OAG/G,yBAAKP,UAAWF,EAAML,SAAS,oCAAoC,kBACjE,2BAAG,8BAAOiB,KAAKC,MAAM/B,EAAMsE,KAAKC,KAAKvC,OAArC,SAEF,yBAAKZ,UAAWF,EAAML,SAAS,kCAAkC,iBAC/D,yBAAKO,UAAU,cACb,8BAAOpB,EAAMsE,KAAK/C,MAClB,2BAAIvB,EAAMsE,KAAKE,IAAIhD,YAIzB,yBAAKJ,UAAU,eACb,yBAAKA,UAAU,cACb,2CAAiBpB,EAAMsE,KAAKC,KAAKE,SAAjC,MAEF,yBAAKrD,UAAU,cACb,2CAAiBpB,EAAMsE,KAAKC,KAAKd,WAEnC,yBAAKrC,UAAU,cACb,uCAAapB,EAAMsE,KAAKI,KAAKC,MAA7B,YC3DGC,G,MAAS,SAAC5E,GAErB,OACE,uBAAGoB,UAAS,iBAAoBqB,QAASzC,EAAM0C,SAC5C1C,EAAMa,SAAU,uBAAGO,UAAU,eAAgB,uBAAGA,UAAU,mBCQ3DyD,EAAK,mCAELC,E,4MAGJC,MAAM,CACJC,OAAQ,MACRC,QAAS,IACT3D,QAAQ,GACRE,QAAQ,KACRQ,KAAK,KACLN,IAAI,GACJwD,KAAK,GACLC,YAAY,GACZvC,SAAS,KACTI,OAAO,GACPI,WAAW,GACXI,YAAY,GACZ4B,UAAS,EACTC,MAAM,KACNvB,SAAQ,EACRwB,UAAU,GACVC,UAAU,I,EAGZC,W,sBAAa,kCAAAC,EAAA,sEACaC,MAAM,uDAAD,OAAwD,EAAKX,MAAMC,OAAnE,gBAAiF,EAAKD,MAAME,OAA5F,kBAA4GJ,EAA5G,0BADlB,cACLc,EADK,gBAEQA,EAAUC,OAFlB,cAELC,EAFK,OAGX,EAAKC,SAAS,CACZxE,QAASuE,EACTrE,QAASqE,EAAKrB,IAAIhD,QAClBQ,KAAM6D,EAAKtB,KAAKvC,KAChBN,IAAKmE,EAAKvE,QAAQ,GAClB4D,KAAMW,EAAKE,QARF,SAWcL,MAAM,uDAAD,OAAwD,EAAKX,MAAMG,KAAKc,IAAxE,gBAAmF,EAAKjB,MAAMG,KAAKe,IAAnG,kBAAgHpB,EAAhH,0BAXnB,cAWLqB,EAXK,iBAYSA,EAAWN,OAZpB,QAYLO,EAZK,OAaX,EAAKL,SAAS,CACZX,YAAagB,EAAMC,MACnBxD,SAAUuD,EAAMC,MAAM,GAAG9D,GACzBU,OAAQmD,EAAMC,MAAM,GACpBhD,WAAY+C,EAAMC,MAAM,GAAGpE,KAC3BwB,YAAa2C,EAAMC,MAAM,GAAGC,WAC5BjB,UAAU,IAnBD,4C,EAyBbkB,UAAY,SAACjE,GACX,EAAKyD,SAAS,CAAClD,SAASP,EAAIC,GAAIU,OAAOX,EAAKe,WAAWf,EAAIL,KAAMwB,YAAYnB,EAAIgE,c,EAGnFxC,O,uCAAS,WAAO0C,GAAP,eAAAd,EAAA,6DACPc,EAAEC,iBACInB,EAAQkB,EAAEE,OAAOC,SAASrB,MAAMzE,MAF/B,SAGD,EAAKkF,SAAS,CAACT,MAAOA,EAAOvB,SAAQ,IAHpC,OAIP,EAAK6C,cAJE,2C,wDAOTxC,K,uCAAO,WAAOoC,GAAP,uBAAAd,EAAA,6DACLc,EAAEC,iBACIlC,EAAOiC,EAAEE,OAAOC,SAASpC,KAAK1D,MAC9BgG,EAHD,YAGW,EAAK7B,MAAMO,WAHtB,SAIcI,MAAM,qDAAD,OAAsDpB,EAAtD,kBAAoEO,EAApE,0BAJnB,cAICgC,EAJD,gBAKmBA,EAAKjB,OALxB,OAMiB,OADhBkB,EALD,QAMSC,OACNC,EADmB,YACH,EAAKjC,MAAMQ,YACvB0B,KAAKH,GACfF,EAAIK,KAAKH,EAAUvF,MACnBjB,aAAaS,QAAQ,SAAUP,KAAK0G,UAAUN,IAC9C,EAAKd,SAAS,CAACP,UAAWyB,EAAW1B,UAAWsB,KAX7C,4C,wDAgBPvC,OAAO,SAACC,GACN,IACM6C,EADO,EAAKpC,MAAMQ,UACF6B,QAAO,SAACC,GAC5B,OAAOA,IAAM/C,KAGTgD,EADQ9G,KAAKC,MAAMH,aAAaI,QAAQ,WACtB0G,QAAO,SAACG,GAAD,OAAOA,IAAKjD,EAAK/C,QAChDiG,QAAQC,IAAIH,GACZhH,aAAaS,QAAQ,SAAUP,KAAK0G,UAAUI,IAC9C,EAAKxB,SAAS,CAACP,UAAU4B,K,EAG3BO,a,sBAAa,sCAAAjC,EAAA,0DACR,EAAKV,MAAMO,UADH,+BAEU,EAAKP,MAAMO,WAFrB,gEAEEhB,EAFF,iBAGsBoB,MAAM,qDAAD,OAAsDpB,EAAtD,kBAAoEO,EAApE,0BAH3B,cAGD8C,EAHC,iBAIiBA,EAAe/B,OAJhC,eAIDgC,EAJC,OAKDC,EALC,YAKS,EAAK9C,MAAMQ,WALpB,UAMDsC,EAAIZ,KAAKW,GANR,QAOP,EAAK9B,SAAS,CAACP,UAAWsC,IAC1BL,QAAQC,IAAI,EAAK1C,MAAMQ,WARhB,uM,EAcboB,Y,sBAAY,kCAAAlB,EAAA,+EAEgBC,MAAM,qDAAD,OAAsD,EAAKX,MAAMM,MAAjE,kBAAgFR,EAAhF,0BAFrB,cAEFc,EAFE,gBAGWA,EAAUC,OAHrB,cAGFC,EAHE,OAIR,EAAKC,SAAS,CACZxE,QAASuE,EACTrE,QAASqE,EAAKrB,IAAIhD,QAClBQ,KAAM6D,EAAKtB,KAAKvC,KAChBN,IAAKmE,EAAKvE,QAAQ,GAClB4D,KAAMW,EAAKE,QAEbyB,QAAQC,IAAI,EAAK1C,MAAMG,MAXf,UAYiBQ,MAAM,uDAAD,OAAwD,EAAKX,MAAMG,KAAKc,IAAxE,gBAAmF,EAAKjB,MAAMG,KAAKe,IAAnG,kBAAgHpB,EAAhH,0BAZtB,eAYFqB,EAZE,iBAaYA,EAAWN,OAbvB,QAaFO,EAbE,OAcR,EAAKL,SAAS,CACZX,YAAagB,EAAMC,MACnBxD,SAAUuD,EAAMC,MAAM,GAAG9D,GACzBU,OAAQmD,EAAMC,MAAM,GACpBhD,WAAY+C,EAAMC,MAAM,GAAGpE,KAC3BwB,YAAa2C,EAAMC,MAAM,GAAGC,aAnBtB,kDAwBRmB,QAAQC,IAAR,MACA,EAAK3B,SAAS,CAAChC,SAAQ,IACvBgE,MAAM,sBA1BE,0D,EA+BZC,Q,uCAAS,WAAMC,GAAN,SAAAvC,EAAA,sEACD,EAAKK,SAAS,CAACd,OAAOgD,EAAKC,OAAOC,SAAUjD,OAAO+C,EAAKC,OAAOE,YAD9D,uBAED,EAAK3C,aAFJ,2C,wDAKT4C,UAAU,SAACC,GACTb,QAAQC,IAAIY,I,mEAIZ,IAAMC,EAAO9H,KAAKC,MAAMH,aAAaI,QAAQ,WAC7C8G,QAAQC,IAAIa,GACRA,GACFC,KAAKzC,SAAS,CAACR,UAAWgD,M,0CAK5BC,KAAK/C,aACLgD,UAAUC,YAAYC,mBAAmBH,KAAKR,QAAQQ,KAAKH,WAC3DG,KAAKb,iB,+BAKG,IAAD,SACwBa,KAAKI,QAA7B9H,EADA,EACAA,SAAWC,EADX,EACWA,YAElB,OAEE,yBAAKM,UAAWP,EAAS,cAAc,OACpC0H,KAAKxD,MAAMK,SACV,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQ1C,QAAS5B,EAAaD,SAAUA,IACxC,kBAAC,EAAD,CAAQgD,OAAQ0E,KAAK1E,OAAQC,QAASyE,KAAKxD,MAAMjB,UACjD,kBAAC,EAAD,CAAU9B,KAAMuG,KAAKxD,MAAM/C,KAAMN,IAAK6G,KAAKxD,MAAMrD,MACjD,kBAAC,EAAD,CAAiBJ,QAASiH,KAAKxD,MAAMzD,QAASE,QAAS+G,KAAKxD,MAAMvD,UAClE,yBAAKJ,UAAU,SACb,yBAAKA,UAAU,aACb,wBAAIA,UAAWP,EAAS,oBAAoB,YAA5C,UAA+D,2CAE7D0H,KAAKxD,MAAMI,YAAYyD,KAAI,SAACvG,EAAKwG,GAC/B,OACE,kBAAC,EAAD,CAAexG,IAAKA,EAAKwG,MAAOA,EAAOnG,QAAS,kBAC9C,EAAK4D,UAAUjE,IAAOO,SAAU,EAAKmC,MAAMnC,eAKrD,yBAAKxB,UAAU,eACb,wBAAIA,UAAWP,EAAS,oBAAoB,YAA5C,WAAgE,2CAC/D0H,KAAKxD,MAAMK,SAAW,kBAAC,EAAD,CAAUpC,OAAQuF,KAAKxD,MAAM/B,OAAQI,WAAYmF,KAAKxD,MAAM3B,WAClDI,YAAa+E,KAAKxD,MAAMvB,cAAiB,IAE5E,yBAAKpC,UAAU,cACb,kBAAC,EAAD,CAAa+C,KAAMoE,KAAKpE,MACrBoE,KAAKxD,MAAMQ,UAAUqD,KAAI,SAACtE,GACzB,OACE,kBAAC,EAAD,CAAWA,KAAMA,EAAMD,OAAQ,kBAC7B,EAAKA,OAAOC,aAOxB,kBAAC,EAAD,W,GAtMMwE,aAAZhE,EACGiE,YAAclJ,EA6MRiF,QCnNKkE,QACW,cAA7B3I,OAAO4I,SAASC,UAEe,UAA7B7I,OAAO4I,SAASC,UAEhB7I,OAAO4I,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBhB,WACrBA,UAAUiB,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvC,QAAQuC,MAAMA,EAAMC,c","file":"static/js/main.66fca90f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.257f9cf0.png\";","import React, {Component, createContext, useState, useEffect} from 'react';\r\n\r\nexport const DarkMode = createContext();\r\n\r\n export const DarkModeWrapper = (props) => {\r\n\r\nconst [darkTheme, setDark]= useState(false);\r\n\r\n  const changeTheme =()=>{\r\n    localStorage.setItem('darkTheme',!darkTheme);\r\n    setDark(!darkTheme);\r\n  };\r\n\r\n   useEffect(() => {\r\n     if (window.localStorage.length) {\r\n        setDark(JSON.parse(localStorage.getItem('darkTheme')));\r\n     }\r\n   }, []);\r\n\r\n  return (\r\n    <DarkMode.Provider value={{\r\n      darkMode: darkTheme,\r\n      changeTheme: changeTheme\r\n    }}>\r\n      {props.children}\r\n    </DarkMode.Provider>\r\n  )\r\n};\r\n\r\n\r\n\r\n","import React, {Component, useContext} from 'react';\r\nimport './body.css'\r\nimport {DarkMode} from \"../DarkModeWrapper/DarkModeWrapper\";\r\n\r\n\r\nexport const Body = (props) => {\r\n  const theme = useContext(DarkMode);\r\n  return (\r\n    <div className={theme.darkMode?'bodyDark body':'body'}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React, {Component} from 'react';\r\nimport './mainWeatherCard.css';\r\nimport img from './img.png'\r\n\r\nexport const MainWeatherCard = (props) => {\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='opacity'>\r\n        <div className='info'>\r\n          <p className='city'><i className=\"fas color fa-map-marker-alt\"/> {props.weather.name}</p>\r\n          <p className='country'>City in {props.country}</p>\r\n        </div>\r\n\r\n        <img className='worldMap' src={img} alt=\"\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport './leftCard.css'\r\n\r\nexport const LeftCard = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <div className='bodyLeft'>\r\n        <div className='top'>\r\n          <span><img className='img' src={`http://openweathermap.org/img/wn/${props.img.icon}@2x.png`} alt=\"\"/></span>\r\n\r\n        </div>\r\n        <div className='bottom'>\r\n          <p className='grades weight'>{Math.round(props.temp)}<span className='grades'>°С</span></p>\r\n          <p className='weatherTitle'>{props.img.description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n","import React, {useContext} from 'react';\r\nimport './OneDayWeather.css';\r\nimport {DarkMode} from \"../DarkModeWrapper/DarkModeWrapper\";\r\n\r\nconst OneDayWeather = (props) => {\r\n  const theme = useContext(DarkMode);\r\n  const date = new Date(props.day.dt*1000).toString().split(' ');\r\n  return (\r\n    <div className='positionOne' onClick={props.onclick}>\r\n          <div key={props.day.dt} className={`${theme.darkMode?'bodyOneDark':'bodyOne'}`}>\r\n            <div className=\"leftOne\">\r\n            <span>\r\n              <img className='imgOne' src={`http://openweathermap.org/img/wn/${props.day.weather[0].icon}@2x.png`} alt=\"\"/>\r\n            </span>\r\n            </div>\r\n            <div className={theme.darkMode?'centerOneDark centerOne ':'centerOne'}>\r\n              <div><span>{date[0]}</span></div>\r\n              <div><p>{props.day.weather[0].description}</p></div>\r\n            </div>\r\n            <div className={`${props.isActive===props.day.dt? `activeColor ${theme.darkMode?'rightOneDark':''} rightOne `  : `rightOne ${theme.darkMode?'rightOneDark':''}`}`}>\r\n              <p><span>{Math.round(props.day.temp.day)}</span>° / <span>{Math.round(props.day.temp.min)}</span>°</p>\r\n\r\n            </div>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default OneDayWeather;\r\n","import React, {useContext} from 'react';\r\nimport {DarkMode} from \"../DarkModeWrapper/DarkModeWrapper\";\r\n\r\nimport './MainInfo.css'\r\n\r\n\r\n// clouds: 49\r\n// dew_point: -2.91\r\n// dt: 1587549600\r\n// feels_like: {day: 9.63, night: 2.94, eve: 8.72, morn: 9.63}\r\n// humidity: 30\r\n// pressure: 1023\r\n// rain: 0.45\r\n// sunrise: 1587525400\r\n// sunset: 1587576463\r\n// temp: {day: 14, min: 5.41, max: 14, night: 5.41, eve: 13.36, …}\r\n// uvi: 4.77\r\n// weather: [{…}]\r\n// wind_deg: 28\r\n// wind_speed: 2.78\r\n\r\nconst MainInfo = (props) => {\r\n  const dateRise = new Date(props.oneDay.sunrise*1000).toString().split(' ');\r\n  const dateSet = new Date(props.oneDay.sunset*1000).toString().split(' ');\r\n  const theme = useContext(DarkMode);\r\n  return (\r\n    <div>\r\n     <div className={theme.darkMode?'mainInfoBodyDark mainInfoBody':'mainInfoBody'}>\r\n        <h1>Temperature:</h1>\r\n        <h2>Day: <span>{props.oneDayTemp.day}°</span></h2>\r\n        <h2>Night: <span>{props.oneDayTemp.night}°</span></h2>\r\n        <h2>Evening: <span>{props.oneDayTemp.eve}°</span></h2>\r\n        <h2>Min: <span>{props.oneDayTemp.min}°</span></h2>\r\n        <h2>Max: <span>{props.oneDayTemp.max}°</span></h2>\r\n        <h1>Feels Like:</h1>\r\n        <h2>Day: <span>{props.oneDayFeels.day}°</span></h2>\r\n        <h2>Night: <span>{props.oneDayFeels.night}°</span></h2>\r\n        <h2>Evening: <span>{props.oneDayFeels.eve}°</span></h2>\r\n        <h1>Pressure:</h1>\r\n        <h2>{props.oneDay.pressure} mm.</h2>\r\n        <h1>Wind Speed:</h1>\r\n        <h2>{props.oneDay.wind_speed} m/s</h2>\r\n        <h1>Sunrise:</h1>\r\n        <h2>{dateRise[4]}</h2>\r\n        <h1>Sunset:</h1>\r\n        <h2>{dateSet[4]}</h2>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default MainInfo;\r\n","import React, {Component, useContext} from 'react';\r\nimport './Header.css'\r\nimport {DarkMode} from \"../DarkModeWrapper/DarkModeWrapper\";\r\n\r\nconst Header = (props) => {\r\n  const theme = useContext(DarkMode)\r\n  return (\r\n      <form className={theme.darkMode?'formDark form':'form'}  onSubmit={props.search}>\r\n        <input className={props.mistake?'error':''}  type=\"search\" name={'input'} placeholder='Enter your city'/>\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n\r\n  return (\r\n    <div className=\"cssload-container position\">\r\n      <div className=\"cssload-speeding-wheel\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React, {Component, useContext} from 'react';\r\nimport './AddLocation.css'\r\nimport {DarkMode} from \"../DarkModeWrapper/DarkModeWrapper\";\r\n\r\nexport const AddLocation = (props) => {\r\n  const theme = useContext(DarkMode)\r\n  return (\r\n    <div className={'positionRightAdd'}>\r\n      {props.children}\r\n      <form className={theme.darkMode?'posRightAddDark formAdd':'formAdd'} onSubmit={props.addi}>\r\n        <input  type=\"search\" name={'city'} placeholder='Enter your city'/>\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, {Component, useContext} from 'react';\r\nimport './OtherCity.css'\r\nimport {DarkMode} from \"../DarkModeWrapper/DarkModeWrapper\";\r\n// base: \"stations\"\r\n// clouds: {all: 20}\r\n// cod: 200\r\n// coord: {lon: 24.03, lat: 49.84}\r\n// dt: 1587810831\r\n// id: 702550\r\n// main:\r\n//   feels_like: 11.29\r\n// humidity: 39\r\n// pressure: 999\r\n// temp: 17\r\n// temp_max: 17\r\n// temp_min: 17\r\n// __proto__: Object\r\n// name: \"Lviv\"\r\n// sys: {type: 1, id: 8909, country: \"UA\", sunrise: 1587784256, sunset: 1587835940}\r\n// timezone: 10800\r\n// visibility: 10000\r\n// weather: Array(1)\r\n// 0:\r\n// description: \"кілька хмар\"\r\n// icon: \"02d\"\r\n// id: 801\r\n// main: \"Clouds\"\r\n// __proto__: Object\r\n// length: 1\r\n// __proto__: Array(0)\r\n// wind: {speed: 6, deg: 300}\r\n// __proto__: Object\r\n\r\nexport const OtherCity = (props) => {\r\n  const theme = useContext(DarkMode)\r\n  return (\r\n    <div className={theme.darkMode?'OtherDark Other':'Other'}>\r\n      <div className='absolute' onClick={props.delete}><i className=\"fas fa-times\"/></div>\r\n      <div className='otherTop'>\r\n        <div className='otherTopLeft'>\r\n          <span>\r\n            <img className='imgOne' src={`http://openweathermap.org/img/wn/${props.city.weather[0].icon}@2x.png`}  alt=\"\"/>\r\n          </span>\r\n        </div>\r\n        <div className={theme.darkMode?'otherTopCenterDark otherTopCenter':'otherTopCenter'}>\r\n          <p><span>{Math.round(props.city.main.temp)}</span>°</p>\r\n        </div>\r\n        <div className={theme.darkMode?'otherTopRightDark otherTopRight':'otherTopRight'}>\r\n          <div className='borderLeft'>\r\n            <span>{props.city.name}</span>\r\n            <p>{props.city.sys.country}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='otherBottom'>\r\n        <div className='bottomLeft'>\r\n          <span>Humidity: {props.city.main.humidity}%</span>\r\n        </div>\r\n        <div className='bottomLeft'>\r\n          <span>Pressure: {props.city.main.pressure}</span>\r\n        </div>\r\n        <div className='bottomLeft'>\r\n          <span>Wind: {props.city.wind.speed}m/s</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport './Button.css'\r\n\r\nexport const Button = (props) => {\r\n\r\n  return (\r\n    <a className={`positionButton`} onClick={props.onclick}>\r\n      {props.darkMode? <i className=\"far fa-sun\"/>: <i className=\"far fa-moon\"/>}\r\n    </a>\r\n  );\r\n}\r\n\r\n","import React, { Component } from 'react';\n\nimport { Body } from \"./components/Body/body\";\nimport './App.css';\nimport {MainWeatherCard} from \"./components/mainWeatherCard/mainWeatherCard\";\nimport {LeftCard} from \"./components/leftCard/leftCard\";\nimport OneDayWeather from \"./components/OneDayWeather/OneDayWeather\";\nimport MainInfo from \"./components/mainInfo/MainInfo\";\nimport Header from \"./components/header/Header\";\nimport Loader from \"./components/Loader/Loader\";\nimport {AddLocation} from \"./components/AddLocation/AddLocation\";\nimport {OtherCity} from \"./components/OtherCity/OtherCity\";\nimport {DarkMode, DarkModeWrapper} from \"./components/DarkModeWrapper/DarkModeWrapper\";\nimport {Button} from \"./components/Button/Button\";\n\nconst API ='e0e763316f96e5d778ab8ecf7c95b8f2';\n\nclass App extends Component {\n  static contextType = DarkMode;\n\n  state={\n    defLat: 51.51,\n    defLon: -0.13,\n    weather:[],\n    country:null,\n    temp:null,\n    img:[],\n    cord:[],\n    weatherWeek:[],\n    isActive:null,\n    oneDay:[],\n    oneDayTemp:[],\n    oneDayFeels:[],\n    isLoaded:false,\n    input:null,\n    mistake:false,\n    locations:[],\n    otherCity:[]\n  };\n\n  getWeather = async() => {\n    const fetchData = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.defLat}&lon=${this.state.defLon}&appid=${API}&units=metric&lang=uk`);\n    const data = await fetchData.json();\n    this.setState({\n      weather: data,\n      country: data.sys.country,\n      temp: data.main.temp,\n      img: data.weather[0],\n      cord: data.coord,\n\n    });\n    const fetchData2 = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.cord.lat}&lon=${this.state.cord.lon}&appid=${API}&units=metric&lang=uk`);\n    const data2 = await fetchData2.json();\n    this.setState({\n      weatherWeek: data2.daily,\n      isActive: data2.daily[0].dt,\n      oneDay: data2.daily[0],\n      oneDayTemp: data2.daily[0].temp,\n      oneDayFeels: data2.daily[0].feels_like,\n      isLoaded: true\n\n    });\n  };\n\n\n  changeDay = (day) =>{\n    this.setState({isActive:day.dt, oneDay:day, oneDayTemp:day.temp, oneDayFeels:day.feels_like} )\n  };\n\n  search = async (e)=>{\n    e.preventDefault();\n    const input = e.target.elements.input.value;\n    await this.setState({input: input, mistake:false});\n    this.fetchSearch();\n  };\n\n  addi = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const loc = [...this.state.locations];\n    const resp = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API}&units=metric&lang=ua`);\n    const otherData = await resp.json();\n    if (otherData.cod === 200) {\n      const positions = [...this.state.otherCity];\n      positions.push(otherData);\n      loc.push(otherData.name);\n      localStorage.setItem('Cities', JSON.stringify(loc));\n      this.setState({otherCity: positions, locations: loc});\n\n    }\n  };\n\n  delete=(city)=>{\n    const list = this.state.otherCity;\n    const filtered = list.filter((fil)=>{\n      return fil!==city\n    });\n    const list2 = JSON.parse(localStorage.getItem('Cities'));\n    const filtList2 = list2.filter((el)=>(el!==city.name));\n    console.log(filtList2);\n    localStorage.setItem('Cities', JSON.stringify(filtList2));\n    this.setState({otherCity:filtered});\n  };\n\n  fetchInCycle=async()=>{\n    if(this.state.locations) {\n      for (const city of this.state.locations) {\n        const fetchDataCycle = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API}&units=metric&lang=ua`);\n        const dataCycle = await fetchDataCycle.json();\n        const add = [...this.state.otherCity];\n        await add.push(dataCycle);\n        this.setState({otherCity: add})\n        console.log(this.state.otherCity);\n\n      }\n    }\n  };\n\n  fetchSearch=async()=>{\n    try{\n      const fetchData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.input}&appid=${API}&units=metric&lang=ua`);\n      const data = await fetchData.json();\n      this.setState({\n        weather: data,\n        country: data.sys.country,\n        temp: data.main.temp,\n        img: data.weather[0],\n        cord: data.coord\n      });\n      console.log(this.state.cord);\n      const fetchData2 = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.cord.lat}&lon=${this.state.cord.lon}&appid=${API}&units=metric&lang=uk`);\n      const data2 = await fetchData2.json();\n      this.setState({\n        weatherWeek: data2.daily,\n        isActive: data2.daily[0].dt,\n        oneDay: data2.daily[0],\n        oneDayTemp: data2.daily[0].temp,\n        oneDayFeels: data2.daily[0].feels_like\n      });\n\n    }\n    catch (e) {\n      console.log(e);\n      this.setState({mistake:true});\n      alert('Error in city name')\n    }\n\n  };\n\n  success =async(poss)=>{\n    await this.setState({defLat:poss.coords.latitude, defLon:poss.coords.longitude})\n    await this.getWeather()\n  };\n\n  errorFunc=(err)=>{\n    console.log(err)\n  };\n\n  componentWillMount() {\n    const val = (JSON.parse(localStorage.getItem('Cities')));\n    console.log(val);\n    if (val) {\n      this.setState({locations: val});\n    }\n  }\n\n  componentDidMount(){\n    this.getWeather();\n    navigator.geolocation.getCurrentPosition(this.success,this.errorFunc);\n    this.fetchInCycle();\n\n  }\n\n\n  render() {\n    const {darkMode , changeTheme}=this.context;\n\n    return (\n\n      <div className={darkMode?'darkApp App':'App'}>\n        {this.state.isLoaded ?\n          <Body>\n            <Button onclick={changeTheme} darkMode={darkMode}/>\n            <Header search={this.search} mistake={this.state.mistake}/>\n            <LeftCard temp={this.state.temp} img={this.state.img}/>\n            <MainWeatherCard weather={this.state.weather} country={this.state.country}/>\n            <div className='mainB'>\n              <div className='mainBLeft'>\n                <h1 className={darkMode?'textDark leftText':'leftText'}>7 Days <span>Forecast</span></h1>\n                {\n                  this.state.weatherWeek.map((day, index) => {\n                    return (\n                      <OneDayWeather day={day} index={index} onclick={() => (\n                        this.changeDay(day))} isActive={this.state.isActive}/>\n                    )\n                  })\n                }\n              </div>\n              <div className='mainBCenter'>\n                <h1 className={darkMode?'textDark leftText':'leftText'}>Current <span>Forecast</span></h1>\n                {this.state.isLoaded ? <MainInfo oneDay={this.state.oneDay} oneDayTemp={this.state.oneDayTemp}\n                                                 oneDayFeels={this.state.oneDayFeels}/> : ''}\n              </div>\n              <div className='mainBRight'>\n                <AddLocation addi={this.addi}>\n                  {this.state.otherCity.map((city) => {\n                    return (\n                      <OtherCity city={city} delete={() => (\n                        this.delete(city))}/>\n                    )\n                  })}\n                </AddLocation>\n              </div>\n            </div>\n          </Body>\n          : <Loader/>}\n      </div>\n    )\n      ;\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {DarkModeWrapper} from \"./components/DarkModeWrapper/DarkModeWrapper\";\n\n\nReactDOM.render(\n  <DarkModeWrapper>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </DarkModeWrapper>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}